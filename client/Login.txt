import React, { useState } from 'react'
import { useHistory } from 'react-router';
import { Grid, Paper, Avatar, TextField, Button, Typography, Link } from '@material-ui/core'
import LockOutlinedIcon from '@material-ui/icons/LockOutlined';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import Checkbox from '@material-ui/core/Checkbox';
import axios from 'axios';
import { Redirect } from 'react-router';
import Register from '../Register';
import FormControl from "@material-ui/core/FormControl";
import FormLabel from "@material-ui/core/FormLabel";
import { Formik, Field, Form, ErrorMessage } from 'formik'
import { FormHelperText } from '@material-ui/core'
import * as Yup from 'yup';
const Login = () => {


    const paperStyle = { padding: 20, height: '70vh', width: 280, margin: "20px auto" }
    const avatarStyle = { backgroundColor: 'blue' }
    const btnstyle = { margin: '10px 0' };
    let history = useHistory();
    const [email, setEmail] = useState("");
    const [password, setPassword] = useState("");
    let [loggedIn, setLoggedIn] = useState(false);
    const token = localStorage.getItem("token");
    const checkboxStyle = { marginTop: '10px' }
    if (token) loggedIn = true;

    const updateEmail = (e, val) => {
        setEmail(e.target.val);
    }
    const updatePassword = (e, val) => {
        setPassword(e.target.val);
    }

    const initialValues = {

        email: '',
        password: '',
    }

    const validationSchema = Yup.object().shape({

        email: Yup.string().email("Enter valid email").required("Required"),
        password: Yup.string().min(8, "Password minimum length should be 8").required("Required"),

    })
    const onSubmit = (e) => {
        console.log("button clicked");

        const data = { email: email, password: password };
        try {
            const token = axios.post("http://localhost:8080/auth/login", data).then((response) => {

                localStorage.setItem("token", token);

                setLoggedIn(true);
            })
        } catch (err) {

            console.log(err);
        }
    }

    if (loggedIn === true) {
        return <Redirect to="/admin" />
    }
    return (
        <Grid>
            <Paper elevation={10} style={paperStyle}>
                <Grid align='center'>
                    <Avatar style={avatarStyle}><LockOutlinedIcon /></Avatar>
                    <h2>Sign In</h2>
                </Grid>

                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>
                    {(props) => (
                        <Form>
                            <TextField label='Email' name="email" onChange={updateEmail} placeholder='Enter email' helperText={<ErrorMessage name="email" component="errorMsg" />} fullWidth />
                            <TextField label='Password' name="password" onChange={updatePassword} placeholder='Enter password' helperText={<ErrorMessage name="email" component="errorMsg" />} fullWidth />
                            <FormControlLabel style={checkboxStyle}
                                control={
                                    <Checkbox
                                        name="checkedB"
                                        color="primary"
                                    />
                                }
                                label="Remember me"
                            />
                            <Typography > Do you have an account ?
                                <Link href="#" onClick={() => { history.push("/register"); }} >
                                    Sign Up
                                </Link>
                            </Typography>
                            <Button type='submit' variant='contained' disabled={props.isSubmitting} style={btnstyle}
                                color='primary'>{props.isSubmitting ? "Loading" : "Sign In"}</Button>
                        </Form>
                    )}
                </Formik>


            </Paper>
        </Grid>
    )
}

export default Login
